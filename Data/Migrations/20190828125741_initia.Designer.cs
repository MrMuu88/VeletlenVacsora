// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeletlenVacsora.Data;

namespace VeletlenVacsora.Data.Migrations
{
    [DbContext(typeof(VacsoraDBContext))]
    [Migration("20190828125741_initia")]
    partial class initia
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("VeletlenVacsora.Data.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<int>("Type");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VeletlenVacsora.Data.Ingredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("IngredientTypeID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("PackageTypeID");

                    b.Property<int>("Price");

                    b.HasKey("ID");

                    b.HasIndex("IngredientTypeID");

                    b.HasIndex("PackageTypeID");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("VeletlenVacsora.Data.Recepie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoryID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Recepies");
                });

            modelBuilder.Entity("VeletlenVacsora.Data.RecepieIngredient", b =>
                {
                    b.Property<int>("RecepieID");

                    b.Property<int>("IngredientID");

                    b.Property<double>("Amount");

                    b.HasKey("RecepieID", "IngredientID");

                    b.HasIndex("IngredientID");

                    b.ToTable("RecepieIngredient");
                });

            modelBuilder.Entity("VeletlenVacsora.Data.Ingredient", b =>
                {
                    b.HasOne("VeletlenVacsora.Data.Category", "IngredientType")
                        .WithMany()
                        .HasForeignKey("IngredientTypeID");

                    b.HasOne("VeletlenVacsora.Data.Category", "PackageType")
                        .WithMany()
                        .HasForeignKey("PackageTypeID");
                });

            modelBuilder.Entity("VeletlenVacsora.Data.Recepie", b =>
                {
                    b.HasOne("VeletlenVacsora.Data.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");
                });

            modelBuilder.Entity("VeletlenVacsora.Data.RecepieIngredient", b =>
                {
                    b.HasOne("VeletlenVacsora.Data.Ingredient", "Ingredient")
                        .WithMany("Recepies")
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VeletlenVacsora.Data.Recepie", "Recepie")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecepieID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
